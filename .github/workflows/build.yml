name: Build

on:
  push:
    branches: main
  pull_request:
    branches: '*'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - node: "@fails-components/jupyter-applet-view"
            python: "fails_components_jupyter_applet_view"
            shortname: "applet-view"
          - node: "@fails-components/jupyter-filesystem-extension"
            python: "fails_components_jupyter_filesystem_extension"
            shortname: "filesystem-extension"
          - node: "@fails-components/jupyter-interceptor"
            python: "fails_components_jupyter_interceptor"
            shortname: "interceptor"
          - node: "@fails-components/jupyter-launcher"
            python: "fails_components_jupyter_launcher"
            shortname: "launcher"
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Base Setup
      uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

    - name: Install dependencies
      run: python -m pip install -U "jupyterlab>=4.0.0,<5"

    - name: Lint the extensions
      run: |
        set -eux
        cd packages/${{ matrix.shortname }}/
        jlpm
        jlpm run lint:check

    - name: Test the extensions
      run: |
        set -eux
        cd packages/${{ matrix.shortname }}/
        jlpm run test

    - name: Build npm packages
      run: |
        set -eux
        jlpm install
        jlpm build:lib

    - name: Build the extension
      run: |
        set -eux
        cd packages/${{ matrix.shortname }}/
        python -m pip install .[test]

        jupyter labextension list
        jupyter labextension list 2>&1 | grep -ie "${{ matrix.node }}.*OK"
        # python -m jupyterlab.browser_check

    - name: Package the extension
      run: |
        set -eux
        cd packages/${{ matrix.shortname }}/

        pip install build
        python -m build
        pip uninstall -y "${{ matrix.python }}" jupyterlab

    - name: Upload extension packages
      uses: actions/upload-artifact@v4
      with:
        name: extension-artifacts-${{ matrix.shortname }}
        path: packages/${{ matrix.shortname }}/*
        if-no-files-found: error

  test_isolated:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - node: "@fails-components/jupyter-applet-view"
            python: "fails_components_jupyter_applet_view"
            shortname: "applet-view"
          - node: "@fails-components/jupyter-filesystem-extension"
            python: "fails_components_jupyter_filesystem_extension"
            shortname: "filesystem-extension"
          - node: "@fails-components/jupyter-interceptor"
            python: "fails_components_jupyter_interceptor"
            shortname: "interceptor"
          - node: "@fails-components/jupyter-launcher"
            python: "fails_components_jupyter_launcher"
            shortname: "launcher"

    steps:
    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        architecture: 'x64'
    - uses: actions/download-artifact@v4
      with:
        name: extension-artifacts-${{ matrix.shortname }}
    - name: Install and Test
      run: |
        set -eux
        # Remove NodeJS, twice to take care of system and locally installed node versions.
        sudo rm -rf $(which node)
        sudo rm -rf $(which node)
        ls -la

        pip install "jupyterlab>=4.0.0,<5" ${{ matrix.python }}*.whl


        jupyter labextension list
        jupyter labextension list 2>&1 | grep -ie "${{ matrix.node }}.*OK"
        python -m jupyterlab.browser_check --no-browser-test

  integration-tests:
    name: Integration tests
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - node: "@fails-components/jupyter-applet-view"
            python: "fails_components_jupyter_applet_view"
            shortname: "applet-view"
          - node: "@fails-components/jupyter-filesystem-extension"
            python: "fails_components_jupyter_filesystem_extension"
            shortname: "filesystem-extension"
          - node: "@fails-components/jupyter-interceptor"
            python: "fails_components_jupyter_interceptor"
            shortname: "interceptor"
          - node: "@fails-components/jupyter-launcher"
            python: "fails_components_jupyter_launcher"
            shortname: "launcher"

    env:
      PLAYWRIGHT_BROWSERS_PATH: ${{ github.workspace }}/pw-browsers

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Base Setup
      uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

    - name: Download extension package
      uses: actions/download-artifact@v4
      with:
        name: extension-artifacts-${{ matrix.shortname }}

    - name: Install the extension
      run: |
        set -eux
        ls -la
        python -m pip install "jupyterlab>=4.0.0,<5" ${{ matrix.python }}*.whl

    - name: Install dependencies
      working-directory: ui-tests
      env:
        YARN_ENABLE_IMMUTABLE_INSTALLS: 0
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
      run: jlpm install

    - name: Set up browser cache
      uses: actions/cache@v4
      with:
        path: |
          ${{ github.workspace }}/pw-browsers
        key: ${{ runner.os }}-${{ hashFiles('ui-tests/yarn.lock') }}

    - name: Install browser
      run: jlpm playwright install chromium
      working-directory: ui-tests

    - name: Execute integration tests
      working-directory: ui-tests
      run: |
        jlpm playwright test

    - name: Upload Playwright Test report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.python }}-playwright-tests
        path: |
          ui-tests/test-results
          ui-tests/playwright-report

  check_links:
    name: Check Links
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
      - uses: jupyterlab/maintainer-tools/.github/actions/check-links@v1
